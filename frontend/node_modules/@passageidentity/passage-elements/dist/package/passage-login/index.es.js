import { d as defineComponent, c as createElementBlock, w as withDirectives, v as vShow, u as unref, a as createBaseVNode, b as createBlock, e as withCtx, o as openBlock, r as renderSlot, s as safelyRegisterElement } from "../customElements.es.js";
import { u as useElementSetup, _ as _sfc_main$1, L as LoginRoute } from "../customElements.es2.js";
import "../customElements.es3.js";
const _hoisted_1 = { class: "container" };
const _sfc_main = defineComponent({
  __name: "LoginApp.ce",
  props: {
    appId: {},
    beforeAuth: { type: Function },
    onSuccess: { type: Function },
    onEvent: { type: Function },
    lang: {},
    defaultCountryCode: {}
  },
  setup(__props) {
    const props = __props;
    const { languageLoading, containerRef } = useElementSetup(props);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        id: "passage-auth-container",
        class: "passage-login",
        ref_key: "containerRef",
        ref: containerRef
      }, [
        withDirectives(createBaseVNode("div", _hoisted_1, [
          (openBlock(), createBlock(_sfc_main$1, {
            key: _ctx.appId,
            homeRoute: unref(LoginRoute)
          }, {
            otpInput: withCtx(() => [
              renderSlot(_ctx.$slots, "otpInput")
            ]),
            loginInput: withCtx(() => [
              renderSlot(_ctx.$slots, "loginInput")
            ]),
            _: 3
          }, 8, ["homeRoute"]))
        ], 512), [
          [vShow, !unref(languageLoading)]
        ])
      ], 512);
    };
  }
});
function registerPassageLoginElement() {
  safelyRegisterElement(_sfc_main, "login");
}
registerPassageLoginElement();
export { registerPassageLoginElement };
//# 
