var p=(r,e,s)=>{if(!e.has(r))throw TypeError("Cannot "+s)};var i=(r,e,s)=>(p(r,e,"read from private field"),s?s.call(r):e.get(r)),u=(r,e,s)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,s)},d=(r,e,s,t)=>(p(r,e,"write to private field"),t?t.call(r,s):e.set(r,s),s);import{Passage as f,PassageError as h,PassageErrorCode as P,ReadOnlyTokenStore as m}from"@passageidentity/passage-js";import y from"jwt-decode";var g=class extends m{constructor(s){super();this.externalToken=s}getAuthToken(){return Promise.resolve(this.externalToken)}},o,n,c=class{constructor(e){u(this,o,void 0);u(this,n,void 0);let s,t;e!==void 0?(s=e,t=new g(s)):s=localStorage.getItem("psg_auth_token");let a=this._getAppId(s),l=new f(a,{tokenStore:t});d(this,o,l.getCurrentUser()),d(this,n,l.getCurrentSession())}_getAppId(e){let s=new h("No Passsage authToken found",{status:P.PSGLoginRequired,statusText:"Login required"});if(e===null)throw s;let t=y(e);if(t!==void 0&&t.aud!==void 0&&Array.isArray(t.aud)&&t.aud[1]!==void 0)return t.aud[1];if(t!==void 0&&t.iss!==void 0){let a=t.iss.split("/");return a[a.length-1]}throw s}authGuard(){return i(this,n).authGuard()}async userInfo(){return i(this,o).userInfo()}async signOut(){return i(this,n).signOut()}async getAuthToken(){return i(this,n).getAuthToken()}async refresh(){return(await i(this,n).refresh()).auth_token}};o=new WeakMap,n=new WeakMap;export{c as PassageUser};
//# 