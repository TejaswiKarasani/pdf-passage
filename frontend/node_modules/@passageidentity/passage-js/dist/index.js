var g=class{encodeBytes(e){let n=btoa(String.fromCharCode(...new Uint8Array(e))).replace(/\+/g,"-").replace(/\//g,"_");return W(n)}decodeBytes(e){let t=e.replace(/-/g,"+").replace(/_/g,"/"),n=W(t);return Uint8Array.from(atob(n),p=>p.charCodeAt(0))}},W=r=>{let e=r.indexOf("=");return r.slice(0,e===-1?r.length:e)};var h=class extends Error{constructor(t,n){super();this.name="PassageError",this.statusCode=n.status,this.statusText=n.statusText,this.message=this._parsePsgErrorResponse(t)}_parsePsgErrorResponse(t){try{return t=JSON.parse(t),t.error?t.error:""}catch{return t}}},T=(i=>(i[i.MultipleChoice=300]="MultipleChoice",i[i.MovedPermanantly=301]="MovedPermanantly",i[i.Found=302]="Found",i[i.SeeOther=303]="SeeOther",i[i.NotModified=304]="NotModified",i[i.TemporaryRedirect=307]="TemporaryRedirect",i[i.PermanentRedirect=308]="PermanentRedirect",i[i.BadRequest=400]="BadRequest",i[i.Unauthorized=401]="Unauthorized",i[i.PaymentRequired=402]="PaymentRequired",i[i.Forbidden=403]="Forbidden",i[i.NotFound=404]="NotFound",i[i.MethodNotAllowed=405]="MethodNotAllowed",i[i.NotAcceptable=406]="NotAcceptable",i[i.ProxyAuthenticationRequired=407]="ProxyAuthenticationRequired",i[i.RequestTimeout=408]="RequestTimeout",i[i.Conflict=409]="Conflict",i[i.Gone=410]="Gone",i[i.LengthRequired=411]="LengthRequired",i[i.PreconditionFailed=412]="PreconditionFailed",i[i.PayloadTooLarge=413]="PayloadTooLarge",i[i.URITooLong=414]="URITooLong",i[i.UnsupportedMediaType=415]="UnsupportedMediaType",i[i.RangeNotSatisfiable=416]="RangeNotSatisfiable",i[i.ExpectationFailed=417]="ExpectationFailed",i[i.MisdirectedRequest=421]="MisdirectedRequest",i[i.UnprocessableEntity=422]="UnprocessableEntity",i[i.Locked=423]="Locked",i[i.FailedDependency=424]="FailedDependency",i[i.TooEarly=425]="TooEarly",i[i.UpgradeRequired=426]="UpgradeRequired",i[i.PreconditionRequired=428]="PreconditionRequired",i[i.TooManyRequests=429]="TooManyRequests",i[i.RequestHeaderFieldsTooLarge=431]="RequestHeaderFieldsTooLarge",i[i.UnavailableForLegalReasons=451]="UnavailableForLegalReasons",i[i.InternalServerError=500]="InternalServerError",i[i.NotImplemented=501]="NotImplemented",i[i.BadGateway=502]="BadGateway",i[i.ServiceUnavailable=503]="ServiceUnavailable",i[i.GatewayTimeout=504]="GatewayTimeout",i[i.HTTPVersionNotSupported=505]="HTTPVersionNotSupported",i[i.VariantAlsoNegotiates=506]="VariantAlsoNegotiates",i[i.InsufficientStorage=507]="InsufficientStorage",i[i.LoopDetected=508]="LoopDetected",i[i.NotExtended=510]="NotExtended",i[i.NetworkAuthenticationRequired=511]="NetworkAuthenticationRequired",i[i.PSGCredObjectDoesNotExist=700]="PSGCredObjectDoesNotExist",i[i.PSGParsePublicKeyForNewDeviceFailed=701]="PSGParsePublicKeyForNewDeviceFailed",i[i.PSGParsePublicKeyForLoginFailed=702]="PSGParsePublicKeyForLoginFailed",i[i.PSGCouldNotGetUserCredential=703]="PSGCouldNotGetUserCredential",i[i.PSGLoginRequired=704]="PSGLoginRequired",i))(T||{});import j from"js-cookie";var B=new g,f=class{psgCredIDExists(e){let t=e.user.id,n=e.handshake.challenge.publicKey.allowCredentials,s=this.getPsgCredObj();if(!s)throw new h("Could not get psg_cred_obj",{status:700,statusText:"PSG Cred Object Does Not Exist"});let p=JSON.parse(s)[t];return p?n.find(d=>{if(B.encodeBytes(B.decodeBytes(d.id))===B.encodeBytes(B.decodeBytes(p)))return!0}):!1}setPsgCredID(e,t){if(!t)throw new h("Could not get user's credential",{status:703,statusText:"PSG Could Not Get User Credential"});let n=this.getPsgCredObj();if(n){let s=JSON.parse(n);s[e]=t==null?void 0:t.id,this.setPsgCredObj(JSON.stringify(s))}else this.setPsgCredObj(JSON.stringify({[e]:t==null?void 0:t.id}))}removeCredential(e){let t=this.getPsgCredObj();if(t===void 0)return;let n=JSON.parse(t);Object.keys(n).forEach(s=>{n[s]===e&&delete n[s]}),this.setPsgCredObj(JSON.stringify(n))}getPsgCredObj(){let e=j.get("psg_cred_obj"),t=localStorage.getItem("psg_cred_obj");if(e!==void 0)return j.set("psg_cred_obj",e,{expires:400,sameSite:"Strict"}),t===null&&localStorage.setItem("psg_cred_obj",e),e;if(t!==null)return j.set("psg_cred_obj",t,{expires:400,sameSite:"Strict"}),t}setPsgCredObj(e){j.set("psg_cred_obj",e,{expires:400,sameSite:"Strict"}),localStorage.setItem("psg_cred_obj",e)}};async function a(r){return r.ok?r.json():await r.text().then(e=>{throw new h(e,r)})}function D(){let r=navigator.userAgent.toLowerCase().indexOf("firefox")>-1,e=window.navigator.userAgent.match(/Firefox\/([0-9]+)\./),t=e?parseInt(e[1]):0;return navigator.platform.indexOf("Win")!==-1&&r&&t===98}function J(r){let e=new Uint8Array(68);e.set(r.slice(0,68));let t=new Uint8Array(r.byteLength-68);t.set(r.slice(68,r.byteLength));let n=new Uint8Array(15),s=new Uint8Array(e.byteLength+n.byteLength+t.byteLength);s.set(e,0),s.set(n,e.byteLength),s.set(t,e.byteLength+n.byteLength);let p=s[30]+15;return s.set([p],30),s}var K={URL:"https://auth.passage.id",version:"@passageidentity/passage-js 3.6.4",CAPTURE_EVENT_URL:"https://us-central1-passage-prod.cloudfunctions.net/capture-event",SENTRY_RELEASE:"passage-js@3.6.4-prod",SENTRY_PROJECT:"passage-js",SENTRY_PROJECT_DSN:"",SENTRY_PROJECT_ENV:"prod",SENTRY_PROJECT_VERSION:"3.6.4"};var y=K;function o(r){let e=new Headers(r),t=y.version;return t&&e.append("Passage-Version",t),e}var q=class{getRefreshToken(){return Promise.resolve(void 0)}},H=class extends q{clearTokens(){return Promise.resolve()}},F=class extends H{constructor(){super(...arguments);this.noLocalStorage=typeof window>"u";this.noLocalStorageError=t=>"Failed to access localStorage or cookies. Must be run client-side."}getAuthToken(){if(this.noLocalStorage)return Promise.reject(this.noLocalStorageError("getAuthToken"));let t=localStorage.getItem("psg_auth_token");return t===null?Promise.resolve(""):Promise.resolve(t)}setAuthToken(t){if(this.noLocalStorage)return Promise.reject(this.noLocalStorageError("setAuthToken"));localStorage.setItem("psg_auth_token",t);let n=!this._isHttps()&&this._isLocalHost();return document.cookie=`psg_auth_token = ${t}; path=/ ${n?"":";secure"}`,Promise.resolve()}getRefreshToken(){this.noLocalStorage&&Promise.reject(this.noLocalStorageError("getRefreshToken"));let t=localStorage.getItem("psg_refresh_token");return t===null?Promise.resolve(void 0):Promise.resolve(t)}setRefreshToken(t){return this.noLocalStorage&&Promise.reject(this.noLocalStorageError("setRefreshToken")),localStorage.setItem("psg_refresh_token",t),Promise.resolve()}setTokens(t){return this.noLocalStorage&&Promise.reject(this.noLocalStorageError("setTokens")),this.setAuthToken(t.auth_token),t.refresh_token&&this.setRefreshToken(t.refresh_token),Promise.resolve()}clearTokens(){return this.noLocalStorage&&Promise.reject(this.noLocalStorageError("clearTokens")),localStorage.removeItem("psg_auth_token"),document.cookie="psg_auth_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;",localStorage.removeItem("psg_refresh_token"),Promise.resolve()}_isLocalHost(){return Boolean(window.location.hostname==="localhost"||window.location.hostname==="[::1]"||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))}_isHttps(){return location.protocol==="https:"}};function _(r){return r.setTokens!==void 0}var Q=r=>typeof r=="object"&&r!==null&&typeof r.auth_result<"u";function w(r,e){return Q(r)?(_(e)&&e.setTokens(r.auth_result),r):(console.warn("Not a valid auth response"),r)}import{CreateCredentialUtils as X}from"@passageidentity/webauthnutils";var G=new g,Z=new f,A=class{constructor(e,t,n){this.tokenStore=t;this.apiUrl=e+"/register/",this.identifier=n}async withWebAuthn(){let e=await fetch(this.apiUrl+"webauthn/start",{headers:o(),body:JSON.stringify({identifier:this.identifier}),method:"POST"}).then(a),t=e.handshake.challenge.publicKey,{credential:n,transports:s}=await X.createCredential(t).catch(b=>{throw new h("error parsing public key for webAuthn",{status:702,statusText:"PSG Parse Public Key For Login Failed"})}),p=new Uint8Array(n==null?void 0:n.response.attestationObject);D()&&(p=J(p));let c=e.user.id,d=await fetch(this.apiUrl+"webauthn/finish",{headers:o(),method:"POST",body:JSON.stringify({user_id:c,handshake_id:e.handshake.id,handshake_response:{rawId:G.encodeBytes(n==null?void 0:n.rawId),id:n==null?void 0:n.id,type:n==null?void 0:n.type,response:{attestationObject:G.encodeBytes(p),clientDataJSON:G.encodeBytes(n==null?void 0:n.response.clientDataJSON)},transports:s}})}).then(a).then(b=>w(b,this.tokenStore));return Z.setPsgCredID(c,n),d.auth_result}};import{GetCredentialUtils as ee}from"@passageidentity/webauthnutils";var L=new g,R=class{constructor(e,t,n){this.tokenStore=t;this.apiUrl=e+"/login/",this.identifier=n!=null?n:""}async withWebAuthn(e){let t=JSON.stringify({identifier:this.identifier}),n=this.identifier?t:void 0,s=await fetch(this.apiUrl+"webauthn/start",{headers:o(),method:"POST",body:n}).then(a),p=s.handshake.challenge.publicKey,c=await ee.getCredential(p,e).catch(b=>{throw new h("error parsing public key for webAuthn",{status:702,statusText:"PSG Parse Public Key For Login Failed"})});return c?(await fetch(this.apiUrl+"webauthn/finish",{headers:o(),method:"POST",body:JSON.stringify({user_id:this.identifier?s.user.id:void 0,handshake_id:s.handshake.id,handshake_response:{id:c.id,rawId:L.encodeBytes(c.rawId),type:c.type,response:{clientDataJSON:L.encodeBytes(c.response.clientDataJSON),authenticatorData:L.encodeBytes(c.response.authenticatorData),signature:L.encodeBytes(c.response.signature),userHandle:L.encodeBytes(c.response.userHandle)}}})}).then(a).then(b=>w(b,this.tokenStore))).auth_result:{auth_token:"",redirect_url:""}}};var v=class{constructor(e){this.apiUrl=e}async appInfo(){return(await fetch(this.apiUrl,{headers:o(),method:"GET"}).then(a)).app}async identifierExists(e){return(await fetch(this.apiUrl+"/users?identifier="+encodeURIComponent(e),{headers:o(),method:"GET"}).then(a)).user}};var m=new g,$=new f,k=class{constructor(e,t){this.tokenStore=t;this.apiUrl=e}async newRegister(e,t){return(await fetch(this.apiUrl+"/register/magic-link",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,magic_link_path:window.location.pathname+window.location.search+window.location.hash,language:t})}).then(a)).magic_link}async newLogin(e,t){return(await fetch(this.apiUrl+"/login/magic-link",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,magic_link_path:window.location.pathname+window.location.search+window.location.hash,language:t})}).then(a)).magic_link}async getStatus(e){return(await fetch(this.apiUrl+"/magic-link/status",{headers:o(),method:"POST",body:JSON.stringify({id:e})}).then(a).then(n=>w(n,this.tokenStore))).auth_result}async activate(e){return(await fetch(this.apiUrl+"/magic-link/activate",{headers:o(),method:"PATCH",body:JSON.stringify({magic_link:e})}).then(a).then(n=>w(n,this.tokenStore))).auth_result}async activateWebAuthnLogin(e){let t=await fetch(this.apiUrl+"/magic-link/webauthn/login/start",{headers:o(),body:JSON.stringify({magic_link:e}),method:"POST"}).then(a);if(!await $.psgCredIDExists(t))throw new h("psg_cred_obj does not exist in the allow list",{status:700,statusText:"Not Found"});let s=await navigator.credentials.get({publicKey:this._parsePublicKeyLogin(t.handshake.challenge.publicKey)}).catch(c=>{throw new h("could not parse publickey for login",{status:702,statusText:"PSG Parse Public Key For Login Failed"})});return s?(await fetch(this.apiUrl+"/magic-link/webauthn/login/finish",{headers:o(),method:"POST",body:JSON.stringify({magic_link:e,user_id:t.user.id,handshake_id:t.handshake.id,handshake_response:{id:s.id,rawId:m.encodeBytes(s.rawId),type:s.type,response:{clientDataJSON:m.encodeBytes(s.response.clientDataJSON),authenticatorData:m.encodeBytes(s.response.authenticatorData),signature:m.encodeBytes(s.response.signature),userHandle:m.encodeBytes(s.response.userHandle)}}})}).then(a).then(c=>w(c,this.tokenStore))).auth_result:{auth_token:"",redirect_url:""}}async activateWebAuthnNewDevice(e){let t=await fetch(this.apiUrl+"/magic-link/webauthn/new/start",{headers:o(),body:JSON.stringify({magic_link:e}),method:"POST"}).then(a),n=await navigator.credentials.create({publicKey:this._parsePublicKeyNewDevice(t.handshake.challenge.publicKey)}).catch(d=>{throw new h("could not parse public key for new device",{status:701,statusText:"PSG Parse Public Key For New Device Failed"})}),s=new Uint8Array(n==null?void 0:n.response.attestationObject);D()&&(s=J(s));let p=await fetch(this.apiUrl+"/magic-link/webauthn/new/finish",{headers:o(),method:"POST",body:JSON.stringify({magic_link:e,user_id:t.user.id,handshake_id:t.handshake.id,handshake_response:{rawId:m.encodeBytes(n.rawId),id:n.id,type:n.type,response:{attestationObject:m.encodeBytes(s),clientDataJSON:m.encodeBytes(n.response.clientDataJSON)}},device_name:navigator.userAgent})}).then(a).then(d=>w(d,this.tokenStore)),c=t.user.id;return $.setPsgCredID(c,n),p.auth_result}_parsePublicKeyLogin(e){if(e.challenge=m.decodeBytes(e.challenge.toString()),e.allowCredentials){for(let t=0;t<e.allowCredentials.length;t++){let n=e.allowCredentials[t];n.id=m.decodeBytes(n.id.toString())}return e}return e}_parsePublicKeyNewDevice(e){return e.challenge=m.decodeBytes(e.challenge.toString()),e.user.id=m.decodeBytes(e.user.id.toString()),e}};var P=class{constructor(e,t){this.tokenStore=t;this.apiUrl=e}async newRegister(e,t){return await fetch(this.apiUrl+"/register/otp",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,language:t})}).then(a)}async newLogin(e,t){return await fetch(this.apiUrl+"/login/otp",{headers:o(),method:"POST",body:JSON.stringify({identifier:e,language:t})}).then(a)}async activate(e,t){return(await fetch(this.apiUrl+"/otp/activate",{headers:o(),method:"POST",body:JSON.stringify({otp:e,otp_id:t})}).then(a).then(s=>w(s,this.tokenStore))).auth_result}};var te=(n=>(n.ACTIVE="active",n.INACTIVE="inactive",n.PENDING="pending",n))(te||{}),E=(t=>(t.Platform="platform",t.Passkey="passkey",t))(E||{});import M from"jwt-decode";function O(r){return`${y.URL}/v1/apps/${r}`}var x=class{constructor(e,t){this.tokenStore=t;this.apiUrl=O(e)+"/tokens/"}async authGuard(){try{let e=await this.tokenStore.getAuthToken(),t=M(e,{header:!0}),n=M(e);return!!(n!==void 0&&t!==void 0&&this._validJWTPayload(n)&&this._validJWTHeader(t))}catch{return!1}}async signOut(){let e=await this.tokenStore.getRefreshToken();return e?fetch(`${this.apiUrl}?`+new URLSearchParams({refresh_token:e}),{method:"DELETE"}).then(({status:t})=>t===200).finally(()=>{_(this.tokenStore)&&this.tokenStore.clearTokens()}):(_(this.tokenStore)&&this.tokenStore.clearTokens(),!0)}async getAuthToken(){let e=await this.tokenStore.getAuthToken();if(await this.tokenStore.getRefreshToken()===void 0){if(!e)throw new h("Login required",{status:704,statusText:"Login required"});return e}if(e){let n=M(e);if(n!==void 0&&this._validJWTPayload(n))return Promise.resolve(e)}return this.refresh().then(n=>n.auth_token)}async refresh(){let e=new h("Login required",{status:704,statusText:"Login required"}),t=await this.tokenStore.getRefreshToken();return t?fetch(this.apiUrl,{headers:o(),method:"POST",body:JSON.stringify({refresh_token:t})}).then(a).then(n=>(_(this.tokenStore)&&this.tokenStore.setTokens(n.auth_result),n.auth_result)).catch(()=>{throw e}):Promise.reject(e)}_validJWTPayload(e){let t=["exp","iss","sub"],n=Math.floor(Date.now()/1e3);return t.forEach(s=>{if(!(s in e))return!1}),!(e.exp&&n>e.exp)}_validJWTHeader(e){let t={alg:"RS256",typ:"JWT"};return!(e.alg!==t.alg||e.typ!==t.typ)}};var N=new g,z=new f,C=class{constructor(e,t){this.tokenStore=t;this.apiUrl=O(e)+"/currentuser",this.session=new x(e,this.tokenStore)}async userInfo(){let e=await this._getToken(),t=await fetch(this.apiUrl,{method:"GET",headers:o({Authorization:`Bearer ${e}`})}).then(async n=>n.status!==200?void 0:await n.json()).catch(n=>{throw new h("Failed to fetch current user.",{status:404,statusText:"Not Found"})});return t==null?void 0:t.user}async changeEmail(e,t){let n=await this._getToken();return(await fetch(`${this.apiUrl}/email`,{method:"PATCH",headers:o({Authorization:`Bearer ${n}`,"Content-Type":"application/json"}),body:JSON.stringify({new_email:e,language:t})}).then(a)).magic_link}async changePhone(e,t){let n=await this._getToken();return(await fetch(`${this.apiUrl}/phone`,{method:"PATCH",headers:o({Authorization:`Bearer ${n}`,"Content-Type":"application/json"}),body:JSON.stringify({new_phone:e,language:t})}).then(a)).magic_link}async editDevice(e,t){if(e===""||e===void 0)throw new h("A deviceID is required for an edit device request.",{status:400,statusText:"Bad Request"});if(Object.keys(t).length===0)throw new h("Edit device request must not have an empty request body.",{status:400,statusText:"Bad Request"});let n=await this._getToken();return(await fetch(`${this.apiUrl}/devices/${e}`,{method:"PATCH",headers:o({Authorization:`Bearer ${n}`,"Content-Type":"application/json"}),body:JSON.stringify({...t})}).then(a)).device}async listDevices(){let e=await this._getToken();return(await fetch(`${this.apiUrl}/devices/`,{method:"GET",headers:o({Authorization:`Bearer ${e}`,"Content-Type":"application/json"})}).then(a)).devices}async addDevice(){let e=await this._getToken(),t=await fetch(this.apiUrl+"/devices/start",{headers:o({Authorization:`Bearer ${e}`}),method:"POST"}).then(a),n=await navigator.credentials.create({publicKey:this._parsePublicKey(t.handshake.challenge.publicKey)}).catch(d=>{throw new h("failed to parse public key",{status:701,statusText:"PSG Parse Public Key For New Device Failed"})}).then(d=>d),s=[];(n==null?void 0:n.response.getTransports)&&typeof(n==null?void 0:n.response.getTransports)=="function"&&(s=n==null?void 0:n.response.getTransports());let p=t.user.id,c=await fetch(this.apiUrl+"/devices/finish",{headers:o({Authorization:`Bearer ${e}`}),method:"POST",body:JSON.stringify({user_id:p,handshake_id:t.handshake.id,handshake_response:{rawId:N.encodeBytes(n==null?void 0:n.rawId),id:n==null?void 0:n.id,type:n==null?void 0:n.type,response:{attestationObject:N.encodeBytes(n==null?void 0:n.response.attestationObject),clientDataJSON:N.encodeBytes(n==null?void 0:n.response.clientDataJSON)},transports:s}})}).then(a);return z.setPsgCredID(p,n),c.device}async deleteDevice(e){let t=typeof e=="string"?e:e.id,n=typeof e=="string"?void 0:e.cred_id;if(!t)throw new h("A deviceID is required to delete a device.",{status:404,statusText:"Not Found"});let s=!1,p=await this._getToken();return s=await fetch(`${this.apiUrl}/devices/${t}`,{method:"DELETE",headers:o({Authorization:`Bearer ${p}`,"Content-Type":"application/json"})}).then(async c=>c.ok?!0:await c.text().then(d=>{throw new h(d,c)})),s&&n!==void 0&&z.removeCredential(n),s}async getMetadata(){let e=await this._getToken();return(await fetch(`${this.apiUrl}/user-metadata`,{method:"GET",headers:o({Authorization:`Bearer ${e}`})}).then(a)).user_metadata}async updateMetadata(e){let t=await this._getToken();return(await fetch(`${this.apiUrl}/user-metadata`,{method:"PATCH",headers:o({Authorization:`Bearer ${t}`,"Content-Type":"application/json"}),body:JSON.stringify({user_metadata:e})}).then(a)).user}_parsePublicKey(e){return e.challenge=N.decodeBytes(e.challenge.toString()),e.user.id=N.decodeBytes(e.user.id.toString()),e}async _getToken(){return await this.session.getAuthToken()}};import{GetCredentialUtils as ne}from"@passageidentity/webauthnutils";var I=class{async getBrowserInfo(){let e=await ne.getCredentialAvailable();return{createPassKeySupported:e.syncedCredential,getPassKeySupported:e.syncedCredential,conditionalUISupported:e.conditionalUI}}};import{CreateCredentialUtils as V,GetCredentialUtils as ie}from"@passageidentity/webauthnutils";var Y=class{constructor(e,t){this.appID=e;this.fullUrl=O(this.appID),(t==null?void 0:t.tokenStore)===void 0?this.tokenStore=new F:this.tokenStore=t.tokenStore}credIDExists(e){let t=new f().getPsgCredObj();return t?!!JSON.parse(t)[e]:!1}async register(e){return await new A(this.fullUrl,this.tokenStore,e).withWebAuthn()}async login(e){return await new R(this.fullUrl,this.tokenStore,e).withWebAuthn()}async loginConditional(e){return await new R(this.fullUrl,this.tokenStore).withWebAuthn({mediation:"conditional",signal:e})}async appInfo(){return await new v(this.fullUrl).appInfo()}async browserInfo(){return await new I().getBrowserInfo()}async getCredentialAvailable(){return await ie.getCredentialAvailable()}async createCredentialAvailable(){return await V.createCredentialAvailable()}checkWebauthnConfig(e){let t=!0;return e.auth_origin.replace(/\/$/,"")!=window.location.origin.replace(/\/$/,"")&&(console.error('The auth_origin configured for webauthn in your app settings does not match the "origin" of your current URL.  Please reconfigure this in the admin console. (Your current "origin" is `'+window.location.origin+"`) Passage will continue to work with other authentication methods."),t=!1),t}async isWebauthnSupported(e){let t=await V.createCredentialAvailable();return e?t.securityKey:t.platform}async identifierExists(e){let n=await new v(this.fullUrl).identifierExists(e);return n&&(n.hasPasskey=n.webauthn_types.includes("passkey"),n)}async newRegisterMagicLink(e,t){return await new k(this.fullUrl,this.tokenStore).newRegister(e,t)}async newLoginMagicLink(e,t){return await new k(this.fullUrl,this.tokenStore).newLogin(e,t)}async magicLinkActivate(e){return await new k(this.fullUrl,this.tokenStore).activate(e)}async magicLinkActivateWebAuthnLogin(e){return await new k(this.fullUrl,this.tokenStore).activateWebAuthnLogin(e)}async magicLinkActivateWebAuthnNewDevice(e){return await new k(this.fullUrl,this.tokenStore).activateWebAuthnNewDevice(e)}async getMagicLinkStatus(e){return await new k(this.fullUrl,this.tokenStore).getStatus(e)}async newRegisterOneTimePasscode(e,t){return await new P(this.fullUrl,this.tokenStore).newRegister(e,t)}async newLoginOneTimePasscode(e,t){return await new P(this.fullUrl,this.tokenStore).newLogin(e,t)}async oneTimePasscodeActivate(e,t){return await new P(this.fullUrl,this.tokenStore).activate(e,t)}getCurrentUser(){return new C(this.appID,this.tokenStore)}getCurrentSession(){return new x(this.appID,this.tokenStore)}async createUser(e){return(await fetch(`${this.fullUrl}/users`,{headers:o(),body:JSON.stringify({...e}),method:"POST"}).then(a)).user}};import{serializeError as se}from"serialize-error";var re=r=>JSON.parse(JSON.stringify(r,(e,t)=>{if(!(t==null||t==="undefined"))return t})),tn=async r=>{try{let{error:e,message:t,sentryConfig:{url:n=y.CAPTURE_EVENT_URL,project:s=y.SENTRY_PROJECT,dsn:p=y.SENTRY_PROJECT_DSN,environment:c=y.SENTRY_PROJECT_ENV,release:d=y.SENTRY_RELEASE,version:b=y.SENTRY_PROJECT_VERSION}={}}=r,S=re({project:s,dsn:p,environment:c,url:n,release:d,version:b});if(!(S.project&&S.url)||!(e||t))return;let U={project:S.project,dsn:S.dsn,environment:S.environment,release:S.release,version:S.version};t&&(U={...U,message:t}),e&&(U={...U,serializedError:se(typeof e=="string"?new Error(e):e)}),await fetch(S.url,{headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST",body:JSON.stringify(U)})}catch(e){console.error(e)}};var oe=(n=>(n.email="email",n.phone="phone",n.both="both",n))(oe||{}),ae=(s=>(s.Phone="phone",s.Email="email",s.Both="both",s.Either="either",s))(ae||{}),ce=(c=>(c.STRING="string",c.BOOLEAN="boolean",c.INTEGER="integer",c.DATE="date",c.PHONE="phone",c.EMAIL="email",c))(ce||{}),ue=(n=>(n.LoginCode="otp",n.MagicLink="magic_link",n.None="none",n))(ue||{});export{ue as AllowedFallbackAuth,oe as Identifier,Y as Passage,h as PassageError,T as PassageErrorCode,F as PassageTokenStore,te as PassageUserStatus,q as ReadOnlyTokenStore,ae as RequiredIdentifier,x as Session,H as TokenStore,C as User,ce as UserMetadataType,E as WebAuthnType,tn as captureEvent,re as cleanSentryConfig,_ as isFullTokenStore};
//#