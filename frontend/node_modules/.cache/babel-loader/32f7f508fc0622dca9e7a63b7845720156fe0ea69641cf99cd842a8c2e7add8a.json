{"ast":null,"code":"exports = module.exports = SemVer;\nvar debug;\n/* istanbul ignore next */\nif (typeof process === 'object' && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args.unshift('SEMVER');\n    console.log.apply(console, args);\n  };\n} else {\n  debug = function () {};\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')';\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] + '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' + '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\\\s*$';\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i]) {\n    re[i] = new RegExp(src[i]);\n  }\n}\nexports.parse = parse;\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  if (version instanceof SemVer) {\n    return version;\n  }\n  if (typeof version !== 'string') {\n    return null;\n  }\n  if (version.length > MAX_LENGTH) {\n    return null;\n  }\n  var r = options.loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version)) {\n    return null;\n  }\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\nexports.valid = valid;\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\nexports.clean = clean;\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\nexports.SemVer = SemVer;\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version;\n    } else {\n      version = version.version;\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n  }\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options);\n  }\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version');\n  }\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version');\n  }\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version');\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = [];\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num;\n        }\n      }\n      return id;\n    });\n  }\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.');\n  }\n  return this.version;\n};\nSemVer.prototype.toString = function () {\n  return this.version;\n};\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other);\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n  return this.compareMain(other) || this.comparePre(other);\n};\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n};\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options);\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1;\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1;\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0;\n  }\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined) {\n      return 0;\n    } else if (b === undefined) {\n      return 1;\n    } else if (a === undefined) {\n      return -1;\n    } else if (a === b) {\n      continue;\n    } else {\n      return compareIdentifiers(a, b);\n    }\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier);\n      }\n      this.inc('pre', identifier);\n      break;\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n        this.major++;\n      }\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++;\n      }\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++;\n      }\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0];\n      } else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0);\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0];\n          }\n        } else {\n          this.prerelease = [identifier, 0];\n        }\n      }\n      break;\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof loose === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    var prefix = '';\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre';\n      var defaultResult = 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key;\n        }\n      }\n    }\n    return defaultResult; // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n  return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n}\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a === b;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      return a !== b;\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose);\n    case '!=':\n      return neq(a, b, loose);\n    case '>':\n      return gt(a, b, loose);\n    case '>=':\n      return gte(a, b, loose);\n    case '<':\n      return lt(a, b, loose);\n    case '<=':\n      return lte(a, b, loose);\n    default:\n      throw new TypeError('Invalid operator: ' + op);\n  }\n}\nexports.Comparator = Comparator;\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp;\n    } else {\n      comp = comp.value;\n    }\n  }\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options);\n  }\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n  if (this.semver === ANY) {\n    this.value = '';\n  } else {\n    this.value = this.operator + this.semver.version;\n  }\n  debug('comp', this);\n}\nvar ANY = {};\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp);\n  }\n  this.operator = m[1];\n  if (this.operator === '=') {\n    this.operator = '';\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY;\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose);\n  }\n};\nComparator.prototype.toString = function () {\n  return this.value;\n};\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose);\n  if (this.semver === ANY) {\n    return true;\n  }\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options);\n  }\n  return cmp(version, this.operator, this.semver, this.options);\n};\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  var rangeTmp;\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n  var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n  var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n  return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\nexports.Range = Range;\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n  if (!(this instanceof Range)) {\n    return new Range(range, options);\n  }\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n  this.format();\n}\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\nRange.prototype.toString = function () {\n  return this.range;\n};\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose;\n  range = range.trim();\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n  return set;\n};\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\nfunction replaceTilde(comp, options) {\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    } else if (pr) {\n      debug('replaceTilde pr', pr);\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n    }\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  var r = options.loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + (+M + 1) + '.0.0';\n      }\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n      }\n    }\n    debug('caret return', ret);\n    return ret;\n  });\n}\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n    if (gtlt === '=' && anyX) {\n      gtlt = '';\n    }\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0;\n      }\n      p = 0;\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm) {\n          M = +M + 1;\n        } else {\n          m = +m + 1;\n        }\n      }\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n    debug('xRange return', ret);\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = '';\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0';\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0';\n  } else {\n    from = '>=' + from;\n  }\n  if (isX(tM)) {\n    to = '';\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0';\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  } else {\n    to = '<=' + to;\n  }\n  return (from + ' ' + to).trim();\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false;\n  }\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options);\n  }\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true;\n    }\n  }\n  return false;\n};\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false;\n    }\n  }\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY) {\n        continue;\n      }\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n          return true;\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n  return true;\n}\nexports.satisfies = satisfies;\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  });\n  return max;\n}\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  });\n  return min;\n}\nexports.minVersion = minVersion;\nfunction minVersion(range, loose) {\n  range = new Range(range, loose);\n  var minver = new SemVer('0.0.0');\n  if (range.test(minver)) {\n    return minver;\n  }\n  minver = new SemVer('0.0.0-0');\n  if (range.test(minver)) {\n    return minver;\n  }\n  minver = null;\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version);\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++;\n          } else {\n            compver.prerelease.push(0);\n          }\n          compver.raw = compver.format();\n        /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver;\n          }\n          break;\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break;\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator);\n      }\n    });\n  }\n  if (minver && range.test(minver)) {\n    return minver;\n  }\n  return null;\n}\nexports.validRange = validRange;\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\nexports.outside = outside;\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.prerelease = prerelease;\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n}\nexports.intersects = intersects;\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options);\n  r2 = new Range(r2, options);\n  return r1.intersects(r2);\n}\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer) {\n    return version;\n  }\n  if (typeof version !== 'string') {\n    return null;\n  }\n  var match = version.match(re[COERCE]);\n  if (match == null) {\n    return null;\n  }\n  return parse(match[1] + '.' + (match[2] || '0') + '.' + (match[3] || '0'));\n}","map":{"version":3,"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","RegExp","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","options","loose","includePrerelease","length","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","prefix","defaultResult","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","value","semver","ANY","operator","intersects","rangeTmp","Range","satisfies","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","some","thisComparators","every","thisComparator","rangeComparators","rangeComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","ret","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","maxSatisfying","versions","max","maxSV","rangeObj","forEach","minSatisfying","min","minSV","minVersion","minver","comparators","comparator","compver","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","high","low","parsed","r1","r2","coerce"],"sources":["/home/tejaswi/pdf-passage/frontend/node_modules/jsonwebtoken/node_modules/semver/semver.js"],"sourcesContent":["exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar R = 0\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\nvar NUMERICIDENTIFIERLOOSE = R++\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')'\n\nvar MAINVERSIONLOOSE = R++\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\n\nvar PRERELEASEIDENTIFIERLOOSE = R++\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\n\nvar PRERELEASELOOSE = R++\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?'\n\nsrc[FULL] = '^' + FULLPLAIN + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?'\n\nvar LOOSE = R++\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\n\nvar GTLT = R++\nsrc[GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\nvar XRANGEIDENTIFIER = R++\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\nvar XRANGEPLAIN = R++\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?'\n\nvar XRANGEPLAINLOOSE = R++\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?'\n\nvar XRANGE = R++\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\nvar XRANGELOOSE = R++\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++\nsrc[LONETILDE] = '(?:~>?)'\n\nvar TILDETRIM = R++\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\nvar TILDE = R++\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\nvar TILDELOOSE = R++\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++\nsrc[LONECARET] = '(?:\\\\^)'\n\nvar CARETTRIM = R++\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\nvar CARET = R++\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\nvar CARETLOOSE = R++\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\nvar COMPARATOR = R++\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\nvar HYPHENRANGELOOSE = R++\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[LOOSE] : re[FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1]\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options)\n        })\n      })\n    })\n  })\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[CARETLOOSE] : re[CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '')\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  var match = version.match(re[COERCE])\n\n  if (match == null) {\n    return null\n  }\n\n  return parse(match[1] +\n    '.' + (match[2] || '0') +\n    '.' + (match[3] || '0'))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}