{"ast":null,"code":"'use strict';\n\nvar asn1 = require('asn1.js'),\n  Buffer = require('safe-buffer').Buffer,\n  EC = require('elliptic').ec;\nvar b64ToBn = require('./b64-to-bn');\nvar PublicKeyInfo = require('./asn1/public-key-info'),\n  PrivateKeyInfo = require('./asn1/private-key-info'),\n  Version = require('./asn1/version');\nvar ECParameters = asn1.define('ECParameters', /* @this */function () {\n  this.choice({\n    namedCurve: this.objid()\n  });\n});\nvar ecPrivkeyVer1 = 1;\nvar ECPrivateKey = asn1.define('ECPrivateKey', /* @this */function () {\n  this.seq().obj(this.key('version').use(Version), this.key('privateKey').octstr(), this.key('parameters').explicit(0).optional().any(), this.key('publicKey').explicit(1).optional().bitstr());\n});\nvar curves = {\n  'P-256': 'p256',\n  'P-384': 'p384',\n  'P-521': 'p521'\n};\nvar oids = {\n  'P-256': [1, 2, 840, 10045, 3, 1, 7],\n  'P-384': [1, 3, 132, 0, 34],\n  'P-521': [1, 3, 132, 0, 35]\n};\nvar parameters = {};\nvar algorithms = {};\nObject.keys(oids).forEach(function (crv) {\n  parameters[crv] = ECParameters.encode({\n    type: 'namedCurve',\n    value: oids[crv]\n  }, 'der');\n  algorithms[crv] = {\n    algorithm: [1, 2, 840, 10045, 2, 1],\n    parameters: parameters[crv]\n  };\n});\noids = null;\nfunction ecJwkToBuffer(jwk, opts) {\n  if ('string' !== typeof jwk.crv) {\n    throw new TypeError('Expected \"jwk.crv\" to be a String');\n  }\n  var hasD = 'string' === typeof jwk.d;\n  var xyTypes = hasD ? ['undefined', 'string'] : ['string'];\n  if (-1 === xyTypes.indexOf(typeof jwk.x)) {\n    throw new TypeError('Expected \"jwk.x\" to be a String');\n  }\n  if (-1 === xyTypes.indexOf(typeof jwk.y)) {\n    throw new TypeError('Expected \"jwk.y\" to be a String');\n  }\n  if (opts.private && !hasD) {\n    throw new TypeError('Expected \"jwk.d\" to be a String');\n  }\n  var curveName = curves[jwk.crv];\n  if (!curveName) {\n    throw new Error('Unsupported curve \"' + jwk.crv + '\"');\n  }\n  var curve = new EC(curveName);\n  var key = {};\n  var hasPub = jwk.x && jwk.y;\n  if (hasPub) {\n    key.pub = {\n      x: b64ToBn(jwk.x, false),\n      y: b64ToBn(jwk.y, false)\n    };\n  }\n  if (opts.private || !hasPub) {\n    key.priv = b64ToBn(jwk.d, true);\n  }\n  key = curve.keyPair(key);\n  var keyValidation = key.validate();\n  if (!keyValidation.result) {\n    throw new Error('Invalid key for curve: \"' + keyValidation.reason + '\"');\n  }\n  var result = keyToPem(jwk.crv, key, opts);\n  return result;\n}\nfunction keyToPem(crv, key, opts) {\n  var compact = false;\n  var publicKey = key.getPublic(compact, 'hex');\n  publicKey = Buffer.from(publicKey, 'hex');\n  publicKey = {\n    unused: 0,\n    data: publicKey\n  };\n  var result;\n  if (opts.private) {\n    var privateKey = key.getPrivate('hex');\n    privateKey = Buffer.from(privateKey, 'hex');\n    result = PrivateKeyInfo.encode({\n      version: 0,\n      privateKeyAlgorithm: algorithms[crv],\n      privateKey: ECPrivateKey.encode({\n        version: ecPrivkeyVer1,\n        privateKey: privateKey,\n        parameters: parameters[crv],\n        publicKey: publicKey\n      }, 'der')\n    }, 'pem', {\n      label: 'PRIVATE KEY'\n    });\n    privateKey.fill(0);\n  } else {\n    result = PublicKeyInfo.encode({\n      algorithm: algorithms[crv],\n      PublicKey: publicKey\n    }, 'pem', {\n      label: 'PUBLIC KEY'\n    });\n  }\n\n  // This is in an if incase asn1.js adds a trailing \\n\n  // istanbul ignore else\n  if ('\\n' !== result.slice(-1)) {\n    result += '\\n';\n  }\n  return result;\n}\nmodule.exports = ecJwkToBuffer;","map":{"version":3,"names":["asn1","require","Buffer","EC","ec","b64ToBn","PublicKeyInfo","PrivateKeyInfo","Version","ECParameters","define","choice","namedCurve","objid","ecPrivkeyVer1","ECPrivateKey","seq","obj","key","use","octstr","explicit","optional","any","bitstr","curves","oids","parameters","algorithms","Object","keys","forEach","crv","encode","type","value","algorithm","ecJwkToBuffer","jwk","opts","TypeError","hasD","d","xyTypes","indexOf","x","y","private","curveName","Error","curve","hasPub","pub","priv","keyPair","keyValidation","validate","result","reason","keyToPem","compact","publicKey","getPublic","from","unused","data","privateKey","getPrivate","version","privateKeyAlgorithm","label","fill","PublicKey","slice","module","exports"],"sources":["/home/tejaswi/pdf-passage/frontend/node_modules/jwk-to-pem/src/ec.js"],"sourcesContent":["'use strict';\n\nvar asn1 = require('asn1.js'),\n\tBuffer = require('safe-buffer').Buffer,\n\tEC = require('elliptic').ec;\n\nvar b64ToBn = require('./b64-to-bn');\n\nvar PublicKeyInfo = require('./asn1/public-key-info'),\n\tPrivateKeyInfo = require('./asn1/private-key-info'),\n\tVersion = require('./asn1/version');\n\nvar ECParameters = asn1.define('ECParameters', /* @this */ function() {\n\tthis.choice({\n\t\tnamedCurve: this.objid()\n\t});\n});\n\nvar ecPrivkeyVer1 = 1;\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', /* @this */ function() {\n\tthis.seq().obj(\n\t\tthis.key('version').use(Version),\n\t\tthis.key('privateKey').octstr(),\n\t\tthis.key('parameters').explicit(0).optional().any(),\n\t\tthis.key('publicKey').explicit(1).optional().bitstr()\n\t);\n});\n\nvar curves = {\n\t'P-256': 'p256',\n\t'P-384': 'p384',\n\t'P-521': 'p521'\n};\n\nvar oids = {\n\t'P-256': [1, 2, 840, 10045, 3, 1, 7],\n\t'P-384': [1, 3, 132, 0, 34],\n\t'P-521': [1, 3, 132, 0, 35]\n};\nvar parameters = {};\nvar algorithms = {};\nObject.keys(oids).forEach(function(crv) {\n\tparameters[crv] = ECParameters.encode({\n\t\ttype: 'namedCurve',\n\t\tvalue: oids[crv]\n\t}, 'der');\n\talgorithms[crv] = {\n\t\talgorithm:  [1, 2, 840, 10045, 2, 1],\n\t\tparameters: parameters[crv]\n\t};\n});\noids = null;\n\nfunction ecJwkToBuffer(jwk, opts) {\n\tif ('string' !== typeof jwk.crv) {\n\t\tthrow new TypeError('Expected \"jwk.crv\" to be a String');\n\t}\n\n\tvar hasD = 'string' === typeof jwk.d;\n\tvar xyTypes = hasD\n\t\t? ['undefined', 'string']\n\t\t: ['string'];\n\n\tif (-1 === xyTypes.indexOf(typeof jwk.x)) {\n\t\tthrow new TypeError('Expected \"jwk.x\" to be a String');\n\t}\n\n\tif (-1 === xyTypes.indexOf(typeof jwk.y)) {\n\t\tthrow new TypeError('Expected \"jwk.y\" to be a String');\n\t}\n\n\tif (opts.private && !hasD) {\n\t\tthrow new TypeError('Expected \"jwk.d\" to be a String');\n\t}\n\n\tvar curveName = curves[jwk.crv];\n\tif (!curveName) {\n\t\tthrow new Error('Unsupported curve \"' + jwk.crv + '\"');\n\t}\n\n\tvar curve = new EC(curveName);\n\n\tvar key = {};\n\n\tvar hasPub = jwk.x && jwk.y;\n\tif (hasPub) {\n\t\tkey.pub = {\n\t\t\tx: b64ToBn(jwk.x, false),\n\t\t\ty: b64ToBn(jwk.y, false)\n\t\t};\n\t}\n\n\tif (opts.private || !hasPub) {\n\t\tkey.priv = b64ToBn(jwk.d, true);\n\t}\n\n\tkey = curve.keyPair(key);\n\n\tvar keyValidation = key.validate();\n\tif (!keyValidation.result) {\n\t\tthrow new Error('Invalid key for curve: \"' + keyValidation.reason + '\"');\n\t}\n\n\tvar result = keyToPem(jwk.crv, key, opts);\n\n\treturn result;\n}\n\nfunction keyToPem(crv, key, opts) {\n\tvar compact = false;\n\tvar publicKey = key.getPublic(compact, 'hex');\n\tpublicKey = Buffer.from(publicKey, 'hex');\n\tpublicKey = {\n\t\tunused: 0,\n\t\tdata: publicKey\n\t};\n\n\tvar result;\n\tif (opts.private) {\n\t\tvar privateKey = key.getPrivate('hex');\n\t\tprivateKey = Buffer.from(privateKey, 'hex');\n\n\t\tresult = PrivateKeyInfo.encode({\n\t\t\tversion: 0,\n\t\t\tprivateKeyAlgorithm: algorithms[crv],\n\t\t\tprivateKey: ECPrivateKey.encode({\n\t\t\t\tversion: ecPrivkeyVer1,\n\t\t\t\tprivateKey: privateKey,\n\t\t\t\tparameters: parameters[crv],\n\t\t\t\tpublicKey: publicKey\n\t\t\t}, 'der')\n\t\t}, 'pem', {\n\t\t\tlabel: 'PRIVATE KEY'\n\t\t});\n\n\t\tprivateKey.fill(0);\n\t} else {\n\t\tresult = PublicKeyInfo.encode({\n\t\t\talgorithm: algorithms[crv],\n\t\t\tPublicKey: publicKey\n\t\t}, 'pem', {\n\t\t\tlabel: 'PUBLIC KEY'\n\t\t});\n\t}\n\n\t// This is in an if incase asn1.js adds a trailing \\n\n\t// istanbul ignore else\n\tif ('\\n' !== result.slice(-1)) {\n\t\tresult += '\\n';\n\t}\n\n\treturn result;\n}\n\nmodule.exports = ecJwkToBuffer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}