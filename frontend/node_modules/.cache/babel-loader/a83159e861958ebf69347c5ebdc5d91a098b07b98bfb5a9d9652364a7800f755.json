{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Passage_apiKey;\nimport User from \"./User\";\nimport jwt from \"jsonwebtoken\";\nimport jwkToPem from \"jwk-to-pem\";\nimport axios from \"axios\";\nconst AUTH_CACHE = {};\n/**\n * Passage Class\n */\nexport default class Passage {\n  /**\n  * Initialize a new Passage instance.\n  * @param {PassageConfig} config The default config for Passage initialization\n  */\n  constructor(config) {\n    _Passage_apiKey.set(this, void 0);\n    if (!(config === null || config === void 0 ? void 0 : config.appID)) {\n      throw new Error(\"A Passage appID is required. Please include {appID: YOUR_APP_ID}.\");\n    }\n    this.appID = config.appID;\n    __classPrivateFieldSet(this, _Passage_apiKey, config === null || config === void 0 ? void 0 : config.apiKey, \"f\");\n    this.user = new User(config);\n    this.authStrategy = (config === null || config === void 0 ? void 0 : config.authStrategy) ? config.authStrategy : \"COOKIE\";\n  }\n  /**\n  * Authenticate request with a cookie, or header. If no authentication\n  * strategy is given, authenticate the request via cookie (default\n  * authentication strategy).\n  *\n  * @param {Request} req Express request\n  * @return {string} UserID of the Passage user\n  */\n  authenticateRequest(req) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.authStrategy == \"HEADER\") {\n        return this.authenticateRequestWithHeader(req);\n      } else {\n        // defaults to cookie\n        return this.authenticateRequestWithCookie(req);\n      }\n    });\n  }\n  /**\n  * Set API key for this Passage instance\n  * @param {string} _apiKey\n  */\n  set apiKey(_apiKey) {\n    __classPrivateFieldSet(this, _Passage_apiKey, _apiKey, \"f\");\n  }\n  /**\n  * Get API key for this Passage instance\n  * @return {string | undefined} Passage API Key\n  */\n  get apiKey() {\n    return __classPrivateFieldGet(this, _Passage_apiKey, \"f\");\n  }\n  /**\n  * Fetch the corresponding JWKS for this app.\n  *\n  * @param {boolean} resetCache Optional value to specify whether or not the cache should be reset\n  * @return {JWKS} JWKS for this app.\n  */\n  fetchJWKS(resetCache) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // use cached value if found\n      if (AUTH_CACHE[this.appID] !== undefined && Object.keys(AUTH_CACHE).length > 0 && !resetCache) {\n        return AUTH_CACHE[this.appID][\"jwks\"];\n      }\n      const jwks = yield axios.get(`https://auth.passage.id/v1/apps/${this.appID}/.well-known/jwks.json`).catch(err => {\n        throw new Error(`Could not fetch appID\\'s JWKs. HTTP status: ${err.response.status}`);\n      }).then(res => {\n        const jwks = res.data.keys;\n        const formattedJWKS = {};\n        // format jwks for cache\n        for (const jwk of jwks) {\n          formattedJWKS[jwk.kid] = jwk;\n        }\n        Object.assign(AUTH_CACHE, {\n          [this.appID]: {\n            jwks: Object.assign({}, formattedJWKS)\n          }\n        });\n        return formattedJWKS;\n      });\n      return jwks;\n    });\n  }\n  /**\n  * Authenticate a request via the http header.\n  *\n  * @param {Request} req Express request\n  * @return {string} User ID for Passage User\n  */\n  authenticateRequestWithHeader(req) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        authorization\n      } = req.headers;\n      if (authorization) {\n        const authToken = authorization.split(\" \")[1];\n        const userID = yield this.validAuthToken(authToken);\n        if (userID) {\n          return userID;\n        } else {\n          throw new Error(\"Could not validate header auth token. You must catch this error.\");\n        }\n      } else {\n        throw new Error(\"Header authorization not found. You must catch this error.\");\n      }\n    });\n  }\n  /**\n  * Authenticate request via cookie.\n  *\n  * @param {Request} req Express request\n  * @return {string} UserID for Passage User\n  */\n  authenticateRequestWithCookie(req) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!req.headers.cookie) {\n        throw new Error(\"Could not find valid cookie for authentication. You must catch this error.\");\n      }\n      const cookies = {};\n      (_a = req.headers.cookie) === null || _a === void 0 ? void 0 : _a.split(\";\").forEach(cookie => {\n        const parts = cookie.match(/(.*?)=(.*)$/);\n        if (parts) {\n          const key = parts[1].trim();\n          const value = parts[2].trim() || \"\";\n          // @ts-ignore\n          cookies[key] = value;\n        }\n      });\n      const passageAuthToken = cookies.psg_auth_token;\n      if (passageAuthToken) {\n        const userID = yield this.validAuthToken(passageAuthToken);\n        if (userID) return userID;else {\n          throw new Error(\"Could not validate auth token. You must catch this error.\");\n        }\n      } else {\n        throw new Error(\"Could not find authentication cookie 'psg_auth_token' token. You must catch this error.\");\n      }\n    });\n  }\n  /**\n  *\n  * @param {string} kid the KID from the authToken to determine which JWK to use.\n  * @return {Promise<JWK | undefined>} the JWK to be used for decoding an authToken with the associated KID.\n  */\n  _findJWK(kid) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!AUTH_CACHE) return undefined;\n      try {\n        const jwk = AUTH_CACHE[this.appID][\"jwks\"][kid];\n        if (jwk) {\n          return jwk;\n        }\n      } catch (e) {\n        // if there is no JWK, cache might need to be updated; update cache and try again\n        yield this.fetchJWKS(true);\n        const jwk = AUTH_CACHE[this.appID][\"jwks\"][kid];\n        if (jwk) {\n          return jwk;\n        }\n        return undefined;\n      }\n    });\n  }\n  /**\n  * Determine if the provided token is valid when compared with its\n  * respective public key.\n  *\n  * @param {string} token Authentication token\n  * @return {string} sub claim if the jwt can be verified, or undefined\n  */\n  validAuthToken(token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const {\n          kid\n        } = jwt.decode(token, {\n          complete: true\n        }).header;\n        if (!kid) {\n          return undefined;\n        }\n        const jwk = yield this._findJWK(kid);\n        if (!jwk) {\n          return undefined;\n        }\n        const pem = jwkToPem(jwk);\n        const userID = jwt.verify(token, pem, {\n          // @ts-ignore\n          algorithms: jwk.alg\n        }).sub;\n        if (userID) return userID.toString();else return undefined;\n      } catch (e) {\n        return undefined;\n      }\n    });\n  }\n  /**\n  * Create a Magic Link for your app.\n  *\n  * @param {MagicLinkRequest} magicLinkReq options for creating a MagicLink.\n  * @return {Promise<MagicLinkObject>} Passage MagicLink object\n  */\n  createMagicLink(magicLinkReq) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const magicLinkData = yield axios.post(`https://api.passage.id/v1/apps/${this.appID}/magic-links/`, magicLinkReq, {\n        headers: {\n          Authorization: `Bearer ${__classPrivateFieldGet(this, _Passage_apiKey, \"f\")}`\n        }\n      }).catch(err => {\n        throw new Error(`Could not create a magic link for this app. HTTP Status: ${err.response.status}.`);\n      }).then(res => {\n        return res.data.magic_link;\n      });\n      return magicLinkData;\n    });\n  }\n  /**\n  * Get App Info about an app\n  *\n  * @return {Promise<AppObject>} Passage App object\n  */\n  getApp() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const appData = yield axios.get(`https://api.passage.id/v1/apps/${this.appID}`).catch(err => {\n        throw new Error(`Could not fetch user. HTTP status: ${err.response.status}`);\n      }).then(res => {\n        return res.data.app;\n      });\n      return appData;\n    });\n  }\n}\n_Passage_apiKey = new WeakMap();","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__classPrivateFieldSet","receiver","state","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Passage_apiKey","User","jwt","jwkToPem","axios","AUTH_CACHE","Passage","constructor","config","appID","Error","apiKey","user","authStrategy","authenticateRequest","req","authenticateRequestWithHeader","authenticateRequestWithCookie","_apiKey","fetchJWKS","resetCache","undefined","Object","keys","length","jwks","catch","err","response","status","res","data","formattedJWKS","jwk","kid","assign","authorization","headers","authToken","split","userID","validAuthToken","_a","cookie","cookies","forEach","parts","match","key","trim","passageAuthToken","psg_auth_token","_findJWK","token","decode","complete","header","pem","verify","algorithms","alg","sub","toString","createMagicLink","magicLinkReq","magicLinkData","post","Authorization","magic_link","getApp","appData","app","WeakMap"],"sources":["/home/tejaswi/pdf-passage/frontend/node_modules/@passageidentity/passage-node/lib/esm/classes/Passage.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Passage_apiKey;\nimport User from \"./User\";\nimport jwt from \"jsonwebtoken\";\nimport jwkToPem from \"jwk-to-pem\";\nimport axios from \"axios\";\nconst AUTH_CACHE = {};\n/**\n * Passage Class\n */\nexport default class Passage {\n    /**\n   * Initialize a new Passage instance.\n   * @param {PassageConfig} config The default config for Passage initialization\n   */\n    constructor(config) {\n        _Passage_apiKey.set(this, void 0);\n        if (!(config === null || config === void 0 ? void 0 : config.appID)) {\n            throw new Error(\"A Passage appID is required. Please include {appID: YOUR_APP_ID}.\");\n        }\n        this.appID = config.appID;\n        __classPrivateFieldSet(this, _Passage_apiKey, config === null || config === void 0 ? void 0 : config.apiKey, \"f\");\n        this.user = new User(config);\n        this.authStrategy = (config === null || config === void 0 ? void 0 : config.authStrategy) ? config.authStrategy : \"COOKIE\";\n    }\n    /**\n   * Authenticate request with a cookie, or header. If no authentication\n   * strategy is given, authenticate the request via cookie (default\n   * authentication strategy).\n   *\n   * @param {Request} req Express request\n   * @return {string} UserID of the Passage user\n   */\n    authenticateRequest(req) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.authStrategy == \"HEADER\") {\n                return this.authenticateRequestWithHeader(req);\n            }\n            else {\n                // defaults to cookie\n                return this.authenticateRequestWithCookie(req);\n            }\n        });\n    }\n    /**\n   * Set API key for this Passage instance\n   * @param {string} _apiKey\n   */\n    set apiKey(_apiKey) {\n        __classPrivateFieldSet(this, _Passage_apiKey, _apiKey, \"f\");\n    }\n    /**\n   * Get API key for this Passage instance\n   * @return {string | undefined} Passage API Key\n   */\n    get apiKey() {\n        return __classPrivateFieldGet(this, _Passage_apiKey, \"f\");\n    }\n    /**\n   * Fetch the corresponding JWKS for this app.\n   *\n   * @param {boolean} resetCache Optional value to specify whether or not the cache should be reset\n   * @return {JWKS} JWKS for this app.\n   */\n    fetchJWKS(resetCache) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // use cached value if found\n            if (AUTH_CACHE[this.appID] !== undefined &&\n                Object.keys(AUTH_CACHE).length > 0 &&\n                !resetCache) {\n                return AUTH_CACHE[this.appID][\"jwks\"];\n            }\n            const jwks = yield axios\n                .get(`https://auth.passage.id/v1/apps/${this.appID}/.well-known/jwks.json`)\n                .catch((err) => {\n                throw new Error(`Could not fetch appID\\'s JWKs. HTTP status: ${err.response.status}`);\n            })\n                .then((res) => {\n                const jwks = res.data.keys;\n                const formattedJWKS = {};\n                // format jwks for cache\n                for (const jwk of jwks) {\n                    formattedJWKS[jwk.kid] = jwk;\n                }\n                Object.assign(AUTH_CACHE, {\n                    [this.appID]: { jwks: Object.assign({}, formattedJWKS) },\n                });\n                return formattedJWKS;\n            });\n            return jwks;\n        });\n    }\n    /**\n   * Authenticate a request via the http header.\n   *\n   * @param {Request} req Express request\n   * @return {string} User ID for Passage User\n   */\n    authenticateRequestWithHeader(req) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { authorization } = req.headers;\n            if (authorization) {\n                const authToken = authorization.split(\" \")[1];\n                const userID = yield this.validAuthToken(authToken);\n                if (userID) {\n                    return userID;\n                }\n                else {\n                    throw new Error(\"Could not validate header auth token. You must catch this error.\");\n                }\n            }\n            else {\n                throw new Error(\"Header authorization not found. You must catch this error.\");\n            }\n        });\n    }\n    /**\n   * Authenticate request via cookie.\n   *\n   * @param {Request} req Express request\n   * @return {string} UserID for Passage User\n   */\n    authenticateRequestWithCookie(req) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!req.headers.cookie) {\n                throw new Error(\"Could not find valid cookie for authentication. You must catch this error.\");\n            }\n            const cookies = {};\n            (_a = req.headers.cookie) === null || _a === void 0 ? void 0 : _a.split(\";\").forEach((cookie) => {\n                const parts = cookie.match(/(.*?)=(.*)$/);\n                if (parts) {\n                    const key = parts[1].trim();\n                    const value = parts[2].trim() || \"\";\n                    // @ts-ignore\n                    cookies[key] = value;\n                }\n            });\n            const passageAuthToken = cookies.psg_auth_token;\n            if (passageAuthToken) {\n                const userID = yield this.validAuthToken(passageAuthToken);\n                if (userID)\n                    return userID;\n                else {\n                    throw new Error(\"Could not validate auth token. You must catch this error.\");\n                }\n            }\n            else {\n                throw new Error(\"Could not find authentication cookie 'psg_auth_token' token. You must catch this error.\");\n            }\n        });\n    }\n    /**\n   *\n   * @param {string} kid the KID from the authToken to determine which JWK to use.\n   * @return {Promise<JWK | undefined>} the JWK to be used for decoding an authToken with the associated KID.\n   */\n    _findJWK(kid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!AUTH_CACHE)\n                return undefined;\n            try {\n                const jwk = AUTH_CACHE[this.appID][\"jwks\"][kid];\n                if (jwk) {\n                    return jwk;\n                }\n            }\n            catch (e) {\n                // if there is no JWK, cache might need to be updated; update cache and try again\n                yield this.fetchJWKS(true);\n                const jwk = AUTH_CACHE[this.appID][\"jwks\"][kid];\n                if (jwk) {\n                    return jwk;\n                }\n                return undefined;\n            }\n        });\n    }\n    /**\n   * Determine if the provided token is valid when compared with its\n   * respective public key.\n   *\n   * @param {string} token Authentication token\n   * @return {string} sub claim if the jwt can be verified, or undefined\n   */\n    validAuthToken(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { kid } = jwt.decode(token, { complete: true }).header;\n                if (!kid) {\n                    return undefined;\n                }\n                const jwk = yield this._findJWK(kid);\n                if (!jwk) {\n                    return undefined;\n                }\n                const pem = jwkToPem(jwk);\n                const userID = jwt.verify(token, pem, {\n                    // @ts-ignore\n                    algorithms: jwk.alg,\n                }).sub;\n                if (userID)\n                    return userID.toString();\n                else\n                    return undefined;\n            }\n            catch (e) {\n                return undefined;\n            }\n        });\n    }\n    /**\n   * Create a Magic Link for your app.\n   *\n   * @param {MagicLinkRequest} magicLinkReq options for creating a MagicLink.\n   * @return {Promise<MagicLinkObject>} Passage MagicLink object\n   */\n    createMagicLink(magicLinkReq) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const magicLinkData = yield axios\n                .post(`https://api.passage.id/v1/apps/${this.appID}/magic-links/`, magicLinkReq, {\n                headers: {\n                    Authorization: `Bearer ${__classPrivateFieldGet(this, _Passage_apiKey, \"f\")}`,\n                },\n            })\n                .catch((err) => {\n                throw new Error(`Could not create a magic link for this app. HTTP Status: ${err.response.status}.`);\n            })\n                .then((res) => {\n                return res.data.magic_link;\n            });\n            return magicLinkData;\n        });\n    }\n    /**\n   * Get App Info about an app\n   *\n   * @return {Promise<AppObject>} Passage App object\n   */\n    getApp() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const appData = yield axios\n                .get(`https://api.passage.id/v1/apps/${this.appID}`)\n                .catch((err) => {\n                throw new Error(`Could not fetch user. HTTP status: ${err.response.status}`);\n            })\n                .then((res) => {\n                return res.data.app;\n            });\n            return appData;\n        });\n    }\n}\n_Passage_apiKey = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}